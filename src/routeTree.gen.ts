/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as MarketingImport } from './routes/_marketing'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as MarketingIndexImport } from './routes/_marketing/index'
import { Route as DashboardSettingsImport } from './routes/dashboard/settings'
import { Route as MarketingTermsImport } from './routes/_marketing/terms'
import { Route as MarketingPrivacyImport } from './routes/_marketing/privacy'
import { Route as authOnboardingImport } from './routes/(auth)/onboarding'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as DashboardSettingsIndexImport } from './routes/dashboard/settings/index'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const MarketingRoute = MarketingImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const MarketingIndexRoute = MarketingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketingRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)

const MarketingTermsRoute = MarketingTermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => MarketingRoute,
} as any)

const MarketingPrivacyRoute = MarketingPrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => MarketingRoute,
} as any)

const authOnboardingRoute = authOnboardingImport.update({
  id: '/(auth)/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardSettingsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/onboarding': {
      id: '/(auth)/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof authOnboardingImport
      parentRoute: typeof rootRoute
    }
    '/_marketing/privacy': {
      id: '/_marketing/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof MarketingPrivacyImport
      parentRoute: typeof MarketingImport
    }
    '/_marketing/terms': {
      id: '/_marketing/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof MarketingTermsImport
      parentRoute: typeof MarketingImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardImport
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexImport
      parentRoute: typeof MarketingImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/'
      fullPath: '/dashboard/settings/'
      preLoaderRoute: typeof DashboardSettingsIndexImport
      parentRoute: typeof DashboardSettingsImport
    }
  }
}

// Create and export the route tree

interface MarketingRouteChildren {
  MarketingPrivacyRoute: typeof MarketingPrivacyRoute
  MarketingTermsRoute: typeof MarketingTermsRoute
  MarketingIndexRoute: typeof MarketingIndexRoute
}

const MarketingRouteChildren: MarketingRouteChildren = {
  MarketingPrivacyRoute: MarketingPrivacyRoute,
  MarketingTermsRoute: MarketingTermsRoute,
  MarketingIndexRoute: MarketingIndexRoute,
}

const MarketingRouteWithChildren = MarketingRoute._addFileChildren(
  MarketingRouteChildren,
)

interface DashboardSettingsRouteChildren {
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
}

const DashboardSettingsRouteChildren: DashboardSettingsRouteChildren = {
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
}

const DashboardSettingsRouteWithChildren =
  DashboardSettingsRoute._addFileChildren(DashboardSettingsRouteChildren)

interface DashboardRouteChildren {
  DashboardSettingsRoute: typeof DashboardSettingsRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardSettingsRoute: DashboardSettingsRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MarketingRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof authLoginRoute
  '/onboarding': typeof authOnboardingRoute
  '/privacy': typeof MarketingPrivacyRoute
  '/terms': typeof MarketingTermsRoute
  '/dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/': typeof MarketingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/onboarding': typeof authOnboardingRoute
  '/privacy': typeof MarketingPrivacyRoute
  '/terms': typeof MarketingTermsRoute
  '/': typeof MarketingIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_marketing': typeof MarketingRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/onboarding': typeof authOnboardingRoute
  '/_marketing/privacy': typeof MarketingPrivacyRoute
  '/_marketing/terms': typeof MarketingTermsRoute
  '/dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/_marketing/': typeof MarketingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/login'
    | '/onboarding'
    | '/privacy'
    | '/terms'
    | '/dashboard/settings'
    | '/'
    | '/dashboard/'
    | '/dashboard/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/onboarding'
    | '/privacy'
    | '/terms'
    | '/'
    | '/dashboard'
    | '/dashboard/settings'
  id:
    | '__root__'
    | '/_marketing'
    | '/dashboard'
    | '/(auth)/login'
    | '/(auth)/onboarding'
    | '/_marketing/privacy'
    | '/_marketing/terms'
    | '/dashboard/settings'
    | '/_marketing/'
    | '/dashboard/'
    | '/dashboard/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MarketingRoute: typeof MarketingRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authOnboardingRoute: typeof authOnboardingRoute
}

const rootRouteChildren: RootRouteChildren = {
  MarketingRoute: MarketingRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authOnboardingRoute: authOnboardingRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_marketing",
        "/dashboard",
        "/(auth)/login",
        "/(auth)/onboarding"
      ]
    },
    "/_marketing": {
      "filePath": "_marketing.tsx",
      "children": [
        "/_marketing/privacy",
        "/_marketing/terms",
        "/_marketing/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/settings",
        "/dashboard/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/onboarding": {
      "filePath": "(auth)/onboarding.tsx"
    },
    "/_marketing/privacy": {
      "filePath": "_marketing/privacy.tsx",
      "parent": "/_marketing"
    },
    "/_marketing/terms": {
      "filePath": "_marketing/terms.tsx",
      "parent": "/_marketing"
    },
    "/dashboard/settings": {
      "filePath": "dashboard/settings.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/settings/"
      ]
    },
    "/_marketing/": {
      "filePath": "_marketing/index.tsx",
      "parent": "/_marketing"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/index.tsx",
      "parent": "/dashboard/settings"
    }
  }
}
ROUTE_MANIFEST_END */
