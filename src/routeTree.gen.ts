/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as MarketingImport } from './routes/_marketing'
import { Route as AuthImport } from './routes/_auth'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as MarketingIndexImport } from './routes/_marketing/index'
import { Route as DashboardSettingsImport } from './routes/dashboard/settings'
import { Route as DashboardAdminImport } from './routes/dashboard/admin'
import { Route as MarketingTermsImport } from './routes/_marketing/terms'
import { Route as MarketingPrivacyImport } from './routes/_marketing/privacy'
import { Route as AuthVerifyEmailImport } from './routes/_auth/verify-email'
import { Route as AuthVerificationSuccessImport } from './routes/_auth/verification-success'
import { Route as AuthResetPasswordImport } from './routes/_auth/reset-password'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthOnboardingImport } from './routes/_auth/onboarding'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AuthApprovalNeededImport } from './routes/_auth/approval-needed'
import { Route as DashboardSettingsIndexImport } from './routes/dashboard/settings/index'
import { Route as DashboardAdminUsersImport } from './routes/dashboard/admin/users'
import { Route as DashboardAdminUploadsImport } from './routes/dashboard/admin/uploads'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const MarketingRoute = MarketingImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const MarketingIndexRoute = MarketingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketingRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAdminRoute = DashboardAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)

const MarketingTermsRoute = MarketingTermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => MarketingRoute,
} as any)

const MarketingPrivacyRoute = MarketingPrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => MarketingRoute,
} as any)

const AuthVerifyEmailRoute = AuthVerifyEmailImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => AuthRoute,
} as any)

const AuthVerificationSuccessRoute = AuthVerificationSuccessImport.update({
  id: '/verification-success',
  path: '/verification-success',
  getParentRoute: () => AuthRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthOnboardingRoute = AuthOnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AuthApprovalNeededRoute = AuthApprovalNeededImport.update({
  id: '/approval-needed',
  path: '/approval-needed',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardSettingsRoute,
} as any)

const DashboardAdminUsersRoute = DashboardAdminUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardAdminRoute,
} as any)

const DashboardAdminUploadsRoute = DashboardAdminUploadsImport.update({
  id: '/uploads',
  path: '/uploads',
  getParentRoute: () => DashboardAdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_auth/approval-needed': {
      id: '/_auth/approval-needed'
      path: '/approval-needed'
      fullPath: '/approval-needed'
      preLoaderRoute: typeof AuthApprovalNeededImport
      parentRoute: typeof AuthImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/onboarding': {
      id: '/_auth/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AuthOnboardingImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/verification-success': {
      id: '/_auth/verification-success'
      path: '/verification-success'
      fullPath: '/verification-success'
      preLoaderRoute: typeof AuthVerificationSuccessImport
      parentRoute: typeof AuthImport
    }
    '/_auth/verify-email': {
      id: '/_auth/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailImport
      parentRoute: typeof AuthImport
    }
    '/_marketing/privacy': {
      id: '/_marketing/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof MarketingPrivacyImport
      parentRoute: typeof MarketingImport
    }
    '/_marketing/terms': {
      id: '/_marketing/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof MarketingTermsImport
      parentRoute: typeof MarketingImport
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardImport
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexImport
      parentRoute: typeof MarketingImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/admin/uploads': {
      id: '/dashboard/admin/uploads'
      path: '/uploads'
      fullPath: '/dashboard/admin/uploads'
      preLoaderRoute: typeof DashboardAdminUploadsImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/admin/users': {
      id: '/dashboard/admin/users'
      path: '/users'
      fullPath: '/dashboard/admin/users'
      preLoaderRoute: typeof DashboardAdminUsersImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/'
      fullPath: '/dashboard/settings/'
      preLoaderRoute: typeof DashboardSettingsIndexImport
      parentRoute: typeof DashboardSettingsImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthApprovalNeededRoute: typeof AuthApprovalNeededRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthOnboardingRoute: typeof AuthOnboardingRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthVerificationSuccessRoute: typeof AuthVerificationSuccessRoute
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthApprovalNeededRoute: AuthApprovalNeededRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthOnboardingRoute: AuthOnboardingRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthVerificationSuccessRoute: AuthVerificationSuccessRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MarketingRouteChildren {
  MarketingPrivacyRoute: typeof MarketingPrivacyRoute
  MarketingTermsRoute: typeof MarketingTermsRoute
  MarketingIndexRoute: typeof MarketingIndexRoute
}

const MarketingRouteChildren: MarketingRouteChildren = {
  MarketingPrivacyRoute: MarketingPrivacyRoute,
  MarketingTermsRoute: MarketingTermsRoute,
  MarketingIndexRoute: MarketingIndexRoute,
}

const MarketingRouteWithChildren = MarketingRoute._addFileChildren(
  MarketingRouteChildren,
)

interface DashboardAdminRouteChildren {
  DashboardAdminUploadsRoute: typeof DashboardAdminUploadsRoute
  DashboardAdminUsersRoute: typeof DashboardAdminUsersRoute
}

const DashboardAdminRouteChildren: DashboardAdminRouteChildren = {
  DashboardAdminUploadsRoute: DashboardAdminUploadsRoute,
  DashboardAdminUsersRoute: DashboardAdminUsersRoute,
}

const DashboardAdminRouteWithChildren = DashboardAdminRoute._addFileChildren(
  DashboardAdminRouteChildren,
)

interface DashboardSettingsRouteChildren {
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
}

const DashboardSettingsRouteChildren: DashboardSettingsRouteChildren = {
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
}

const DashboardSettingsRouteWithChildren =
  DashboardSettingsRoute._addFileChildren(DashboardSettingsRouteChildren)

interface DashboardRouteChildren {
  DashboardAdminRoute: typeof DashboardAdminRouteWithChildren
  DashboardSettingsRoute: typeof DashboardSettingsRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminRoute: DashboardAdminRouteWithChildren,
  DashboardSettingsRoute: DashboardSettingsRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MarketingRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/approval-needed': typeof AuthApprovalNeededRoute
  '/login': typeof AuthLoginRoute
  '/onboarding': typeof AuthOnboardingRoute
  '/register': typeof AuthRegisterRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/verification-success': typeof AuthVerificationSuccessRoute
  '/verify-email': typeof AuthVerifyEmailRoute
  '/privacy': typeof MarketingPrivacyRoute
  '/terms': typeof MarketingTermsRoute
  '/dashboard/admin': typeof DashboardAdminRouteWithChildren
  '/dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/': typeof MarketingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/admin/uploads': typeof DashboardAdminUploadsRoute
  '/dashboard/admin/users': typeof DashboardAdminUsersRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/approval-needed': typeof AuthApprovalNeededRoute
  '/login': typeof AuthLoginRoute
  '/onboarding': typeof AuthOnboardingRoute
  '/register': typeof AuthRegisterRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/verification-success': typeof AuthVerificationSuccessRoute
  '/verify-email': typeof AuthVerifyEmailRoute
  '/privacy': typeof MarketingPrivacyRoute
  '/terms': typeof MarketingTermsRoute
  '/dashboard/admin': typeof DashboardAdminRouteWithChildren
  '/': typeof MarketingIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/admin/uploads': typeof DashboardAdminUploadsRoute
  '/dashboard/admin/users': typeof DashboardAdminUsersRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_marketing': typeof MarketingRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/_auth/approval-needed': typeof AuthApprovalNeededRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/onboarding': typeof AuthOnboardingRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_auth/verification-success': typeof AuthVerificationSuccessRoute
  '/_auth/verify-email': typeof AuthVerifyEmailRoute
  '/_marketing/privacy': typeof MarketingPrivacyRoute
  '/_marketing/terms': typeof MarketingTermsRoute
  '/dashboard/admin': typeof DashboardAdminRouteWithChildren
  '/dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/_marketing/': typeof MarketingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/admin/uploads': typeof DashboardAdminUploadsRoute
  '/dashboard/admin/users': typeof DashboardAdminUsersRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/approval-needed'
    | '/login'
    | '/onboarding'
    | '/register'
    | '/reset-password'
    | '/verification-success'
    | '/verify-email'
    | '/privacy'
    | '/terms'
    | '/dashboard/admin'
    | '/dashboard/settings'
    | '/'
    | '/dashboard/'
    | '/dashboard/admin/uploads'
    | '/dashboard/admin/users'
    | '/dashboard/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/approval-needed'
    | '/login'
    | '/onboarding'
    | '/register'
    | '/reset-password'
    | '/verification-success'
    | '/verify-email'
    | '/privacy'
    | '/terms'
    | '/dashboard/admin'
    | '/'
    | '/dashboard'
    | '/dashboard/admin/uploads'
    | '/dashboard/admin/users'
    | '/dashboard/settings'
  id:
    | '__root__'
    | '/_auth'
    | '/_marketing'
    | '/dashboard'
    | '/_auth/approval-needed'
    | '/_auth/login'
    | '/_auth/onboarding'
    | '/_auth/register'
    | '/_auth/reset-password'
    | '/_auth/verification-success'
    | '/_auth/verify-email'
    | '/_marketing/privacy'
    | '/_marketing/terms'
    | '/dashboard/admin'
    | '/dashboard/settings'
    | '/_marketing/'
    | '/dashboard/'
    | '/dashboard/admin/uploads'
    | '/dashboard/admin/users'
    | '/dashboard/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  MarketingRoute: typeof MarketingRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  MarketingRoute: MarketingRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_marketing",
        "/dashboard"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/approval-needed",
        "/_auth/login",
        "/_auth/onboarding",
        "/_auth/register",
        "/_auth/reset-password",
        "/_auth/verification-success",
        "/_auth/verify-email"
      ]
    },
    "/_marketing": {
      "filePath": "_marketing.tsx",
      "children": [
        "/_marketing/privacy",
        "/_marketing/terms",
        "/_marketing/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/admin",
        "/dashboard/settings",
        "/dashboard/"
      ]
    },
    "/_auth/approval-needed": {
      "filePath": "_auth/approval-needed.tsx",
      "parent": "/_auth"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/onboarding": {
      "filePath": "_auth/onboarding.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_auth/reset-password": {
      "filePath": "_auth/reset-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/verification-success": {
      "filePath": "_auth/verification-success.tsx",
      "parent": "/_auth"
    },
    "/_auth/verify-email": {
      "filePath": "_auth/verify-email.tsx",
      "parent": "/_auth"
    },
    "/_marketing/privacy": {
      "filePath": "_marketing/privacy.tsx",
      "parent": "/_marketing"
    },
    "/_marketing/terms": {
      "filePath": "_marketing/terms.tsx",
      "parent": "/_marketing"
    },
    "/dashboard/admin": {
      "filePath": "dashboard/admin.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/admin/uploads",
        "/dashboard/admin/users"
      ]
    },
    "/dashboard/settings": {
      "filePath": "dashboard/settings.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/settings/"
      ]
    },
    "/_marketing/": {
      "filePath": "_marketing/index.tsx",
      "parent": "/_marketing"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/admin/uploads": {
      "filePath": "dashboard/admin/uploads.tsx",
      "parent": "/dashboard/admin"
    },
    "/dashboard/admin/users": {
      "filePath": "dashboard/admin/users.tsx",
      "parent": "/dashboard/admin"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/index.tsx",
      "parent": "/dashboard/settings"
    }
  }
}
ROUTE_MANIFEST_END */
