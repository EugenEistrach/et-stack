/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as DashboardAuthenticatedImport } from './routes/~dashboard/~_authenticated'
import { Route as authOnboardingImport } from './routes/~(auth)/~onboarding'
import { Route as authLoginImport } from './routes/~(auth)/~login'
import { Route as landingPageIndexImport } from './routes/~(landing-page)/~index'
import { Route as DashboardAuthenticatedNotesImport } from './routes/~dashboard/~_authenticated/~notes'
import { Route as DashboardAuthenticatedIndexImport } from './routes/~dashboard/~_authenticated/~index'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAuthenticatedRoute = DashboardAuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => DashboardRoute,
} as any)

const authOnboardingRoute = authOnboardingImport.update({
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const landingPageIndexRoute = landingPageIndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAuthenticatedNotesRoute =
  DashboardAuthenticatedNotesImport.update({
    path: '/notes',
    getParentRoute: () => DashboardAuthenticatedRoute,
  } as any)

const DashboardAuthenticatedIndexRoute =
  DashboardAuthenticatedIndexImport.update({
    path: '/',
    getParentRoute: () => DashboardAuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(landing-page)/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingPageIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof authOnboardingImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_authenticated': {
      id: '/dashboard/_authenticated'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardAuthenticatedImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_authenticated/': {
      id: '/dashboard/_authenticated/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardAuthenticatedIndexImport
      parentRoute: typeof DashboardAuthenticatedImport
    }
    '/dashboard/_authenticated/notes': {
      id: '/dashboard/_authenticated/notes'
      path: '/notes'
      fullPath: '/dashboard/notes'
      preLoaderRoute: typeof DashboardAuthenticatedNotesImport
      parentRoute: typeof DashboardAuthenticatedImport
    }
  }
}

// Create and export the route tree

interface DashboardAuthenticatedRouteChildren {
  DashboardAuthenticatedIndexRoute: typeof DashboardAuthenticatedIndexRoute
  DashboardAuthenticatedNotesRoute: typeof DashboardAuthenticatedNotesRoute
}

const DashboardAuthenticatedRouteChildren: DashboardAuthenticatedRouteChildren =
  {
    DashboardAuthenticatedIndexRoute: DashboardAuthenticatedIndexRoute,
    DashboardAuthenticatedNotesRoute: DashboardAuthenticatedNotesRoute,
  }

const DashboardAuthenticatedRouteWithChildren =
  DashboardAuthenticatedRoute._addFileChildren(
    DashboardAuthenticatedRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardAuthenticatedRoute: typeof DashboardAuthenticatedRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAuthenticatedRoute: DashboardAuthenticatedRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof landingPageIndexRoute
  '/login': typeof authLoginRoute
  '/onboarding': typeof authOnboardingRoute
  '/dashboard': typeof DashboardAuthenticatedRouteWithChildren
  '/dashboard/': typeof DashboardAuthenticatedIndexRoute
  '/dashboard/notes': typeof DashboardAuthenticatedNotesRoute
}

export interface FileRoutesByTo {
  '/': typeof landingPageIndexRoute
  '/login': typeof authLoginRoute
  '/onboarding': typeof authOnboardingRoute
  '/dashboard': typeof DashboardAuthenticatedIndexRoute
  '/dashboard/notes': typeof DashboardAuthenticatedNotesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof landingPageIndexRoute
  '/login': typeof authLoginRoute
  '/onboarding': typeof authOnboardingRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_authenticated': typeof DashboardAuthenticatedRouteWithChildren
  '/dashboard/_authenticated/': typeof DashboardAuthenticatedIndexRoute
  '/dashboard/_authenticated/notes': typeof DashboardAuthenticatedNotesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/onboarding'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/notes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/onboarding' | '/dashboard' | '/dashboard/notes'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/onboarding'
    | '/dashboard'
    | '/dashboard/_authenticated'
    | '/dashboard/_authenticated/'
    | '/dashboard/_authenticated/notes'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  landingPageIndexRoute: typeof landingPageIndexRoute
  authLoginRoute: typeof authLoginRoute
  authOnboardingRoute: typeof authOnboardingRoute
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  landingPageIndexRoute: landingPageIndexRoute,
  authLoginRoute: authLoginRoute,
  authOnboardingRoute: authOnboardingRoute,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/login",
        "/onboarding",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "~(landing-page)/~index.tsx"
    },
    "/login": {
      "filePath": "~(auth)/~login.tsx"
    },
    "/onboarding": {
      "filePath": "~(auth)/~onboarding.tsx"
    },
    "/dashboard": {
      "filePath": "~dashboard",
      "children": [
        "/dashboard/_authenticated"
      ]
    },
    "/dashboard/_authenticated": {
      "filePath": "~dashboard/~_authenticated.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_authenticated/",
        "/dashboard/_authenticated/notes"
      ]
    },
    "/dashboard/_authenticated/": {
      "filePath": "~dashboard/~_authenticated/~index.tsx",
      "parent": "/dashboard/_authenticated"
    },
    "/dashboard/_authenticated/notes": {
      "filePath": "~dashboard/~_authenticated/~notes.tsx",
      "parent": "/dashboard/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
