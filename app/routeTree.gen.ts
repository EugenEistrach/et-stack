/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as MarketingImport } from './routes/~_marketing'
import { Route as DashboardAuthenticatedImport } from './routes/~dashboard/~_authenticated'
import { Route as MarketingTermsImport } from './routes/~_marketing/~terms'
import { Route as MarketingPrivacyImport } from './routes/~_marketing/~privacy'
import { Route as authOnboardingImport } from './routes/~(auth)/~onboarding'
import { Route as authLoginImport } from './routes/~(auth)/~login'
import { Route as MarketingIndexImport } from './routes/~_marketing/~index'
import { Route as DashboardAuthenticatedSettingsImport } from './routes/~dashboard/~_authenticated/~settings'
import { Route as DashboardAuthenticatedNotesImport } from './routes/~dashboard/~_authenticated/~notes'
import { Route as DashboardAuthenticatedIndexImport } from './routes/~dashboard/~_authenticated/~index'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const MarketingRoute = MarketingImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAuthenticatedRoute = DashboardAuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => DashboardRoute,
} as any)

const MarketingTermsRoute = MarketingTermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => MarketingRoute,
} as any)

const MarketingPrivacyRoute = MarketingPrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => MarketingRoute,
} as any)

const authOnboardingRoute = authOnboardingImport.update({
  id: '/(auth)/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const MarketingIndexRoute = MarketingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketingRoute,
} as any)

const DashboardAuthenticatedSettingsRoute =
  DashboardAuthenticatedSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => DashboardAuthenticatedRoute,
  } as any)

const DashboardAuthenticatedNotesRoute =
  DashboardAuthenticatedNotesImport.update({
    id: '/notes',
    path: '/notes',
    getParentRoute: () => DashboardAuthenticatedRoute,
  } as any)

const DashboardAuthenticatedIndexRoute =
  DashboardAuthenticatedIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardAuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingImport
      parentRoute: typeof rootRoute
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexImport
      parentRoute: typeof MarketingImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/onboarding': {
      id: '/(auth)/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof authOnboardingImport
      parentRoute: typeof rootRoute
    }
    '/_marketing/privacy': {
      id: '/_marketing/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof MarketingPrivacyImport
      parentRoute: typeof MarketingImport
    }
    '/_marketing/terms': {
      id: '/_marketing/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof MarketingTermsImport
      parentRoute: typeof MarketingImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_authenticated': {
      id: '/dashboard/_authenticated'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardAuthenticatedImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_authenticated/': {
      id: '/dashboard/_authenticated/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardAuthenticatedIndexImport
      parentRoute: typeof DashboardAuthenticatedImport
    }
    '/dashboard/_authenticated/notes': {
      id: '/dashboard/_authenticated/notes'
      path: '/notes'
      fullPath: '/dashboard/notes'
      preLoaderRoute: typeof DashboardAuthenticatedNotesImport
      parentRoute: typeof DashboardAuthenticatedImport
    }
    '/dashboard/_authenticated/settings': {
      id: '/dashboard/_authenticated/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardAuthenticatedSettingsImport
      parentRoute: typeof DashboardAuthenticatedImport
    }
  }
}

// Create and export the route tree

interface MarketingRouteChildren {
  MarketingIndexRoute: typeof MarketingIndexRoute
  MarketingPrivacyRoute: typeof MarketingPrivacyRoute
  MarketingTermsRoute: typeof MarketingTermsRoute
}

const MarketingRouteChildren: MarketingRouteChildren = {
  MarketingIndexRoute: MarketingIndexRoute,
  MarketingPrivacyRoute: MarketingPrivacyRoute,
  MarketingTermsRoute: MarketingTermsRoute,
}

const MarketingRouteWithChildren = MarketingRoute._addFileChildren(
  MarketingRouteChildren,
)

interface DashboardAuthenticatedRouteChildren {
  DashboardAuthenticatedIndexRoute: typeof DashboardAuthenticatedIndexRoute
  DashboardAuthenticatedNotesRoute: typeof DashboardAuthenticatedNotesRoute
  DashboardAuthenticatedSettingsRoute: typeof DashboardAuthenticatedSettingsRoute
}

const DashboardAuthenticatedRouteChildren: DashboardAuthenticatedRouteChildren =
  {
    DashboardAuthenticatedIndexRoute: DashboardAuthenticatedIndexRoute,
    DashboardAuthenticatedNotesRoute: DashboardAuthenticatedNotesRoute,
    DashboardAuthenticatedSettingsRoute: DashboardAuthenticatedSettingsRoute,
  }

const DashboardAuthenticatedRouteWithChildren =
  DashboardAuthenticatedRoute._addFileChildren(
    DashboardAuthenticatedRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardAuthenticatedRoute: typeof DashboardAuthenticatedRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAuthenticatedRoute: DashboardAuthenticatedRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MarketingRouteWithChildren
  '/': typeof MarketingIndexRoute
  '/login': typeof authLoginRoute
  '/onboarding': typeof authOnboardingRoute
  '/privacy': typeof MarketingPrivacyRoute
  '/terms': typeof MarketingTermsRoute
  '/dashboard': typeof DashboardAuthenticatedRouteWithChildren
  '/dashboard/': typeof DashboardAuthenticatedIndexRoute
  '/dashboard/notes': typeof DashboardAuthenticatedNotesRoute
  '/dashboard/settings': typeof DashboardAuthenticatedSettingsRoute
}

export interface FileRoutesByTo {
  '/': typeof MarketingIndexRoute
  '/login': typeof authLoginRoute
  '/onboarding': typeof authOnboardingRoute
  '/privacy': typeof MarketingPrivacyRoute
  '/terms': typeof MarketingTermsRoute
  '/dashboard': typeof DashboardAuthenticatedIndexRoute
  '/dashboard/notes': typeof DashboardAuthenticatedNotesRoute
  '/dashboard/settings': typeof DashboardAuthenticatedSettingsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_marketing': typeof MarketingRouteWithChildren
  '/_marketing/': typeof MarketingIndexRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/onboarding': typeof authOnboardingRoute
  '/_marketing/privacy': typeof MarketingPrivacyRoute
  '/_marketing/terms': typeof MarketingTermsRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_authenticated': typeof DashboardAuthenticatedRouteWithChildren
  '/dashboard/_authenticated/': typeof DashboardAuthenticatedIndexRoute
  '/dashboard/_authenticated/notes': typeof DashboardAuthenticatedNotesRoute
  '/dashboard/_authenticated/settings': typeof DashboardAuthenticatedSettingsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/login'
    | '/onboarding'
    | '/privacy'
    | '/terms'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/notes'
    | '/dashboard/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/onboarding'
    | '/privacy'
    | '/terms'
    | '/dashboard'
    | '/dashboard/notes'
    | '/dashboard/settings'
  id:
    | '__root__'
    | '/_marketing'
    | '/_marketing/'
    | '/(auth)/login'
    | '/(auth)/onboarding'
    | '/_marketing/privacy'
    | '/_marketing/terms'
    | '/dashboard'
    | '/dashboard/_authenticated'
    | '/dashboard/_authenticated/'
    | '/dashboard/_authenticated/notes'
    | '/dashboard/_authenticated/settings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MarketingRoute: typeof MarketingRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authOnboardingRoute: typeof authOnboardingRoute
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  MarketingRoute: MarketingRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authOnboardingRoute: authOnboardingRoute,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/_marketing",
        "/(auth)/login",
        "/(auth)/onboarding",
        "/dashboard"
      ]
    },
    "/_marketing": {
      "filePath": "~_marketing.tsx",
      "children": [
        "/_marketing/",
        "/_marketing/privacy",
        "/_marketing/terms"
      ]
    },
    "/_marketing/": {
      "filePath": "~_marketing/~index.tsx",
      "parent": "/_marketing"
    },
    "/(auth)/login": {
      "filePath": "~(auth)/~login.tsx"
    },
    "/(auth)/onboarding": {
      "filePath": "~(auth)/~onboarding.tsx"
    },
    "/_marketing/privacy": {
      "filePath": "~_marketing/~privacy.tsx",
      "parent": "/_marketing"
    },
    "/_marketing/terms": {
      "filePath": "~_marketing/~terms.tsx",
      "parent": "/_marketing"
    },
    "/dashboard": {
      "filePath": "~dashboard",
      "children": [
        "/dashboard/_authenticated"
      ]
    },
    "/dashboard/_authenticated": {
      "filePath": "~dashboard/~_authenticated.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_authenticated/",
        "/dashboard/_authenticated/notes",
        "/dashboard/_authenticated/settings"
      ]
    },
    "/dashboard/_authenticated/": {
      "filePath": "~dashboard/~_authenticated/~index.tsx",
      "parent": "/dashboard/_authenticated"
    },
    "/dashboard/_authenticated/notes": {
      "filePath": "~dashboard/~_authenticated/~notes.tsx",
      "parent": "/dashboard/_authenticated"
    },
    "/dashboard/_authenticated/settings": {
      "filePath": "~dashboard/~_authenticated/~settings.tsx",
      "parent": "/dashboard/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
